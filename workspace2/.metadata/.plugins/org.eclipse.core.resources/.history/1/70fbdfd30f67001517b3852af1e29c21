
import java.util.Iterator;


import java.util.Iterator;


public class TokenIter implements Iterator<String>{

	//input line to be tokenized
	private String line;

	// the next Token, null if no next Token
	private String nextToken = " ";
	int loc = 0;

	// scLine is the scanner that gets the input line
	//Scanner scLine = new Scanner(line);

	public TokenIter(String line){
		this.line = line;
	}


	@Override
	// implement
	public boolean hasNext() {
		// TODO Auto-generated method stub
		if(loc<line.length()){
			return true;
		}
		return false;
	}

	@Override
	//implement
	public String next() {
		// TODO Auto-generated method stub
		//		String digit = "";
		//		String operator = "";
		//		if(loc<line.length()&&Character.isDigit(line.charAt(loc))){
		//			while(loc<line.length()&&Character.isDigit(line.charAt(loc))){
		//				digit = digit+line.charAt(loc);
		//				loc++;
		//			}
		//			nextToken = digit;
		//		}
		//		else{
		//			operator = operator+line.charAt(loc);
		//			loc++;
		//			nextToken = operator;
		//		}
		String word = "";
		if(line.charAt(loc)==' '){
			while(line.charAt(loc)==' '&&loc<line.length()){
				loc++;
			}
		}
		if ((line.charAt(loc)=='('||line.charAt(loc)==')')&&loc<line.length()){
			word += line.charAt(loc);
			loc++;
		}
		else if(loc<line.length()){
			do{
				word += line.charAt(loc);
				loc++;
				if(word.equals("true")||word.equals("false")||word.equals("and")||word.equals("or")
						||word.equals("not")||word.equals("(")||word.equals(")")){
					nextToken = word;
					return nextToken;
				}
			}
			while(line.charAt(loc)!=' '&&line.charAt(loc)!='('&&line.charAt(loc)!=')');
		}
		if(word.equals("true")||word.equals("false")||word.equals("and")||word.equals("or")
				||word.equals("not")||word.equals("(")||word.equals(")")){
			nextToken = word;
		}
		return nextToken;

		//Wrong code:
		//		while(scLine.next()==" "){
		//			scLine.next();
		//		}
		//		nextToken=line.
		//		System.out.println(nextToken);
		//		System.out.println(scLine.next());
		//		return nextToken;
	}

	@Override
	// provided, do not change
	public void remove() {
		// TODO Auto-generated method stub
		throw new UnsupportedOperationException();
	}

	// provided
	public static void main(String[] args){
		String line;
		// you can play with other inputs on the command line
		if(args.length>0)
			line = args[0];
		// or do the standard test
		else
			line = " not BAD (true or false) && notgood ";
		System.out.println("line: [" + line + "]");
		TokenIter tokIt = new TokenIter(line);
		while(tokIt.hasNext()){
			System.out.println("next token: [" + tokIt.next() + "]");
		}
	}
}
//
//
//public class TokenIter implements Iterator<String>{
//
//	// This class builds a Token Iterator, that produces 
//	// Strings containing numbers (sequences of digits) and 
//	// special characters: "(" ")" "+" "-"  "*" "/"
//
//
//	//input line to be tokenized
//	private String line;
//
//	// the next Token, null if no next Token
//	private String nextToken = " ";
//	int loc = 0;
//	
//	// scLine is the scanner that gets the input line
//	//Scanner scLine = new Scanner(line);
//			
//	public TokenIter(String line){
//		line = line.replaceAll("\\s", "");
//		this.line = line;
//	}
//
//	@Override
//	public void remove() {
//		// TODO Auto-generated method stub
//		throw new UnsupportedOperationException();
//	}
//
//	@Override
//	public boolean hasNext() {
//		// TODO Auto-generated method stub
//		
//	}
//
//	@Override
//	public String next() {
//		// TODO Auto-generated method stub
//		// if(scLine.hasNextInt())nextToken=Integer.toString(scLine.nextInt());
//		// if token nextToken=scLine.next();
//		String digit = "";
//		String operator = "";
//		if(loc<line.length()&&Character.isDigit(line.charAt(loc))){
//			while(loc<line.length()&&Character.isDigit(line.charAt(loc))){
//				digit = digit+line.charAt(loc);
//				loc++;
//			}
//			nextToken = digit;
//		}
//		else{
//			operator = operator+line.charAt(loc);
//			loc++;
//			nextToken = operator;
//		}
//		return nextToken;
//		
////		while(scLine.next()==" "){
////			scLine.next();
////		}
////		nextToken=line.
////		System.out.println(nextToken);
////		System.out.println(scLine.next());
////		return nextToken;
//	}
//	
//	public static void main(String[] args){
//		String line = "  15*(26+37) - 489/5*61 - (723-8456789)   ";
//		System.out.println("line: [" + line + "]");
//		TokenIter tokIt = new TokenIter(line);
//		// print tokens in square brackets to check absence of white space
//		//System.out.println(tokIt.line);
//		while(tokIt.hasNext()){
//			System.out.println("next token: [" + tokIt.next() + "]");
//		}
//	}
//
//}
