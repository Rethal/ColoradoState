
public class BSTNode {

	private String  item;
	private BSTNode left;
	private BSTNode right;

	// one node, empty children
	public BSTNode(String item){
		this.item = item;
		left = null;
		right = null;
	}

	public String getItem(){
		return item;
	}

	public BSTNode getLeft(){
		return left;
	}
	public void setLeft(BSTNode newLeft){
		left = newLeft;
	}

	public BSTNode getRight(){
		return right;
	}

	public void setRight(BSTNode newRight){
		right = newRight;
	}

	public BSTNode delete(BSTNode node){
		//return leftmost right child
		if (node.getRight()==null){
			return left;
		}
		else {
			node = node.getRight();
			while (node.getLeft()!=null){
				node = node.getLeft();
			}
		}
		return node;
	}

	public String toString(){
		if(left==null && right == null)
			return "leaf: " + item;
		else
			return "internal: " + item;

	}


}
